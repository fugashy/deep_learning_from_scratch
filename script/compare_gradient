#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import sys, os
import pathlib
import numpy as np
p = pathlib.Path(os.path.dirname(__file__) + '/..')
sys.path.append(str(p.resolve()))

from src import (
    mnist, networks
)


if __name__ == '__main__':
    (x_train, t_train), _ = mnist.load_mnist(normalize=True, one_hot_label=True)
    x_batch = x_train[:3]
    t_batch = t_train[:3]

    network = networks.TwoLayerNet(input_size=784, hidden_size=50, output_size=10)

    grad_numerical = network.numerical_gradient(x_batch, t_batch)
    grad_backprop = network.gradient(x_batch, t_batch)

    for key in grad_numerical.keys():
        print(str(np.average(np.abs(grad_backprop[key]))) + ' - ' + str(np.average(np.abs(grad_numerical[key]))))
        diff = np.average(np.abs(grad_backprop[key] - grad_numerical[key]))
        print(key + ':' + str(diff))
